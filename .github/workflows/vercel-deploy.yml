name: Vercel Deployment
on:
  push:
    branches:
      - dev
      - test
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        required: true
        options: ["preview", "production"]
        default: preview
      instances:
        type: choice
        description: Tango Instance(s)
        required: true
        options:
          - Staff
          - Operator
          - Both
        default: Both
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        run: |
          if [[ "${{ github.event.inputs.instances }}" == "Both" ]]; then
            instances=("Staff" "Operator")
          else
            instances=("${{ github.event.inputs.instances }}")
          fi

          for instance in "${instances[@]}"; do
            echo "Deploying to Vercel environment: $instance"

            INSTANCE=$(echo "$instance" | tr '[:lower:]' '[:upper:]')

            # Dynamically set project and org IDs based on selected instance(s)
            project_id=$(echo "${{ secrets.VERCEL_PROJECT_ID_${INSTANCE} }}")

            # Configure Vercel Project
            mkdir -p .vercel
            echo "{\"projectId\": \"$project_id\", \"orgId\": \"${{ secrets.VERCEL_ORG_ID}}\"}" > .vercel/project.json
            echo "Vercel Project Configuration: " && cat .vercel/project.json

            # Vercel Pull and Deploy
            vercel pull --environment=$instance --token=${{ secrets.VERCEL_TOKEN }}
            vercel deploy --prebuilt ${{ github.event.inputs.github_environment == 'production' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
          done
